# 用来处理和输出模型训练中间数据

import csv
import matplotlib.pyplot as plt

def process_data(input_file, output_file):
    data = []

    with open(input_file, 'r') as file:
        lines = file.readlines()
        epoch_num = 1

        for i in range(0, len(lines)-3, 4):
            epoch_number = epoch_num
            train_loss = float(lines[i + 1].split(":")[4].split(",")[0].strip())
            train_mlm_acc = float(lines[i].split(":")[5].split(",")[0].strip())
            train_nsp_acc = float(lines[i].split(":")[6].strip())

            val_mlm_acc = float(lines[i + 2].split(":")[3].split(",")[0].strip())
            val_nsp_acc = float(lines[i + 2].split(":")[4].strip())

            data.append([epoch_number, train_loss, train_mlm_acc, train_nsp_acc, val_mlm_acc, val_nsp_acc])
            epoch_num += 1

    with open(output_file, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        csvwriter.writerow(['Epoch', 'Train Loss', 'Train MLM Acc', 'Train NSP Acc', 'Val MLM Acc', 'Val NSP Acc'])
        csvwriter.writerows(data)



def plot_accuracy(input_file):
    epochs = []
    train_accuracy = []
    valid_accuracy = []

    with open(input_file, 'r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            epochs.append(int(row['Epoch']))
            train_accuracy.append(float(row['Train NSP Acc']))
            valid_accuracy.append(float(row['Val NSP Acc']))

    plt.plot(epochs, train_accuracy, label='Train Accuracy', color='#CFD99D',linewidth=3)
    plt.plot(epochs, valid_accuracy, label='Valid Accuracy', color='#8F85C2',linewidth=3)
    plt.xlabel('Epoch')
    plt.ylabel('Accuracy')
    plt.title("NSP Train and Valid Accuracy Over Epochs")
    plt.legend()
    # 添加网格线
    plt.grid(True)

    plt.show()

def plot_loss(input_file):
    epochs = []
    train_loss = []
    valid_loss=[]

    with open(input_file, 'r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            epochs.append(int(row['Epoch']))
            train_loss.append(float(row['Train Loss']))
            valid_loss.append(float(row['valid loss']))

    plt.plot(epochs, train_loss, label='Train Loss', color='#DCC68E',linewidth=3)
    plt.plot(epochs, valid_loss, label='Valid Loss', color='#00A4B1', linewidth=3)
    plt.xlabel('Epoch')
    plt.ylabel('Loss')
    plt.title("Direct Finetune Train and Valid Loss Over Epochs")
    plt.legend()
    # 添加网格线
    plt.grid(True)
    plt.show()
if __name__ == "__main__":
    input_file_path = "train_data.txt"  # 替换为实际文件路径
    output_file_path = "output.csv"  # 替换为输出文件名

    plot_accuracy(output_file_path)




